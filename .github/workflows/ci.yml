name: Python CI + Docker + Slack Notify

on: [push, pull_request]

env:
  RUN_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          apt-get update && apt-get install -y jq

      - name: Run flake8
        id: flake8
        run: flake8 .
        continue-on-error: true

      - name: Run pylint
        id: pylint
        run: pylint app/ tests/
        continue-on-error: true

      - name: Run pytest
        id: pytest
        run: pytest -v
        continue-on-error: true

      - name: Notify Slack
        if: always()
        run: |
          FAILED=0
          if [[ "${{ steps.flake8.outcome }}" == "failure" ]]; then FAILED=1; fi
          if [[ "${{ steps.pylint.outcome }}" == "failure" ]]; then FAILED=1; fi
          if [[ "${{ steps.pytest.outcome }}" == "failure" ]]; then FAILED=1; fi

          if [[ $FAILED -eq 1 ]]; then
            STATUS="FAILED"
          else
            STATUS="SUCCESS"
          fi

          MSG="$STATUS: $GITHUB_REPOSITORY @ ${GITHUB_SHA::7} on $GITHUB_REF_NAME"

          JSON_PAYLOAD=$(jq -n --arg msg "$MSG" '{text: $msg}')

          curl -X POST -H 'Content-type: application/json' \
            --data "$JSON_PAYLOAD" \
            "${{ secrets.SLACK_WEBHOOK_URL }}"

  docker:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          tags: ci-docker:latest

      # 6. Run pytest
      - name: Run pyte


